public class AttendancePage extends javax.swing.JFrame {

    public AttendancePage() 
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        heading = new javax.swing.JLabel();
        mathlabel = new javax.swing.JLabel();
        ooplabel = new javax.swing.JLabel();
        dsdlabel = new javax.swing.JLabel();
        englabel = new javax.swing.JLabel();
        regnolabel = new javax.swing.JLabel();
        regnotext = new javax.swing.JTextField();
        mathtext = new javax.swing.JTextField();
        dsdtext = new javax.swing.JTextField();
        ooptext = new javax.swing.JTextField();
        englishtext = new javax.swing.JTextField();
        mathmax = new javax.swing.JLabel();
        oopmax = new javax.swing.JLabel();
        dsdmax = new javax.swing.JLabel();
        engmax = new javax.swing.JLabel();
        back = new javax.swing.JButton();
        submit = new javax.swing.JButton();

        //setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        heading.setText("ATTENDANCE");

        mathlabel.setText("Maths :");

        ooplabel.setText("OOP :");

        dsdlabel.setText("DSD :");

        englabel.setText("English :");

        regnolabel.setText("Registration No. :");

        regnotext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regnotextActionPerformed(evt);
            }
        });

        mathmax.setText("/40");

        oopmax.setText("/40");

        dsdmax.setText("/40");

        engmax.setText("/40");

        back.setText("Back");

        submit.setText("Submit");

        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back)
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(heading))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(regnolabel)
                                    .addComponent(mathlabel)
                                    .addComponent(englabel)
                                    .addComponent(dsdlabel)
                                    .addComponent(ooplabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(mathtext)
                                            .addComponent(ooptext)
                                            .addComponent(dsdtext)
                                            .addComponent(englishtext, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dsdmax)
                                            .addComponent(oopmax)
                                            .addComponent(engmax)
                                            .addComponent(mathmax)))
                                    .addComponent(regnotext, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(submit)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(back))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(heading)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(regnolabel)
                            .addComponent(regnotext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mathlabel)
                            .addComponent(mathtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mathmax))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ooplabel, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ooptext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(oopmax))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dsdlabel)
                            .addComponent(dsdtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dsdmax))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(englabel)
                            .addComponent(englishtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(engmax))))
                .addGap(18, 18, 18)
                .addComponent(submit)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) 
    {//GEN-FIRST:event_regnotextActionPerformed
        Boolean valid;
        int one = -1;
        int two = -1;
        int three = -1;
        int four = -1;

        try
        {
            one = Integer.parseInt(mathtext);
            two = Integer.parseInt(ooptext);
            three = Integer.parseInt(dsdtext);
            four = Integer.parseInt(englishtext);
            if(one < 40 || two < 40 || three < 40 || four < 40)
            {
                valid = false;
                throw new BadInputException();
            }
        }
        catch(Exception e)
        {

        }

        ArrayList<Student> a = StudentReader.returnDatabase();
            String stu = regnotext.getText();
            Student obj = null; 
            for(int i = 0; i < a.size(); i++)
            {
                if(a.get(i).regNo.equals(stu))
                {
                    obj = a.remove(i);
                    break;
                }
            }

            try
            {
                if(obj == null)
                {
                    valid = false;
                    throw new BadInputException();
                }
                obj.x.attendance[0] = one;
                obj.x.attendance[1] = two;
                obj.x.attendance[2] = three;
                obj.x.attendance[3] = four;
                a.add(obj);
            }
            catch(BadInputException e)
            {
                JOptionPane.showMessageDialog(this, "Invalid Registration Number" , "Error", JOptionPane.ERROR_MESSAGE);
            }

            try
            {
                ObjectOutputStream o = new ObjectOutputStream(new FileOutputStream("database.txt"));
                for(int i = 0; i < a.size(); i++)
                o.writeObject(a.get(i));
                o.writeObject(new Student());
                o.close();
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(this, e , "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        if(valid)
        JOptionPane.showMessageDialog(this, "Attendance successfully updated." , "Updated", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_regnotextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendancePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendancePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendancePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendancePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendancePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JLabel dsdlabel;
    private javax.swing.JLabel dsdmax;
    private javax.swing.JTextField dsdtext;
    private javax.swing.JLabel englabel;
    private javax.swing.JTextField englishtext;
    private javax.swing.JLabel engmax;
    private javax.swing.JLabel heading;
    private javax.swing.JLabel mathlabel;
    private javax.swing.JLabel mathmax;
    private javax.swing.JTextField mathtext;
    private javax.swing.JLabel ooplabel;
    private javax.swing.JLabel oopmax;
    private javax.swing.JTextField ooptext;
    private javax.swing.JLabel regnolabel;
    private javax.swing.JTextField regnotext;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables
}

class BadInputException extends Exception
{
    BadInputException()
    {
        System.out.println("One or more incorrect entries made. Try again?");
    }
}

class StudentReader
{
    public static ArrayList<Student> returnDatabase() 
    {
        ArrayList<Student> data = new ArrayList<Student>();

        try
        {
            ObjectInputStream o = new ObjectInputStream(new FileInputStream("database.txt"));
            while(true)
            {
                Student s = (Student)o.readObject();
                if(s.name.equals("uninit")) break;
                data.add(s);
            }
            o.close();
        }
        catch(Exception e)
        {
            System.out.println("Error." + e);
        }

    return data;
    }
}

class Student implements Serializable
{
    String name;
    String regNo;
    String DOB;
    String branch;
    int year;
    Subject x;

    Student()
    {
        name = regNo = DOB = branch = "uninit";
        year = -1; 
        x = new Subject();
    }
}

class Subject implements Serializable
{
    double ses1[];
    double ses2[];
    double ends[];
    int attendance[];
    Subject()
    {
        ses1 = new double[4];
        ses2 = new double[4];
        ends = new double[4];
        attendance = new int[4];
    }
}